Представим, что у нас есть группа микросервисов.
Есть сервис оперирующий профилями пользователей.
При модификации записи пользователя мы рассылаем сообщения заинтересованным сервисам, в которых транспортируется только идентификатор записи и тип операции над пользователем, например:
{
  "userId": 13283,
  "actionType: "PROFILE_UPDATED"
}
actionType может быть: "PROFILE_CREATED", "PROFILE_DELETED", "PROFILE_UPDATED".

Сервисы получающие данные сообщения могут вычитать профиль пользователя (посредство прямого запроса в сервис менеджмента пользователей) и выполнить на своей стороне необходимые бизнес действия: удалить или пометить как рекомендованные к удалению данные, связанные с пользователем, обновить кэши на своей стороне и т.п

Известно что:
- мы имеем право модифицировать сервисы
- группа сервисов использует реляционную СУБД с уровнем изоляции транзакций READ_COMMITTED.
- каждый сервис запросто может быть выключен: свет потух или хомячок перегрыз кабель.
- могут появляться как новые сервисы, так и реплицироваться текущие.

Как построите и какие инструменты для реализации данного взаимодействия выберете?

Когда будете отправлять события: в транзакции, вне транзакции, пост фактум успешного завершения транзакции?

Какие инструменты помимо СУБД и прямых вызовов  будете использовать для реализации взаимодействия, и какое взаимодействие это будет - exactlyOnce, atMostOnce, atLeastOnce?
Как добиться exactlyOnce.